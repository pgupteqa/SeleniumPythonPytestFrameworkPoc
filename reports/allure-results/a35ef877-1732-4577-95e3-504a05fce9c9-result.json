{"name": "test_loginsalesforce_validcredentials[test_list_item0]", "status": "broken", "statusDetails": {"message": "ValueError: no option named '--sf_username'", "trace": "self = <_pytest.config.Config object at 0x000001A1E94F30E0>, name = '--sf_username', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default: Any = notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option. You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Fallback value if no option of that name is **declared** via :hook:`pytest_addoption`.\n            Note this parameter will be ignored when the option is **declared** even if the option's value is ``None``.\n        :param skip: If ``True``, raise :func:`pytest.skip` if option is undeclared or has a ``None`` value.\n            Note that even if ``True``, if a default was specified it will be returned instead of a skip.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AttributeError: 'Namespace' object has no attribute '--sf_username'\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\config\\__init__.py:1743: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nself = <testcases.login_test.TestLogin object at 0x000001A1ECBA8910>, test_list_item = {'password': 'Pra245pte#', 'username': 'pgbitbucket706@agentforce.com'}\nrequest = <FixtureRequest for <Function test_loginsalesforce_validcredentials[test_list_item0]>>\n\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"test_list_item\", BaseTest.get_data_from_json(Login_test_data_path,\"valid_login\"))\n    def test_loginsalesforce_validcredentials(self, test_list_item,request):\n        loginpage = LoginPage(self.driver)\n>       homepage = loginpage.logintosalesforce(test_list_item[\"username\"],test_list_item[\"password\"],request)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntestcases\\login_test.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\loginPage.py:23: in logintosalesforce\n    homepage = HomePage(self.driver,request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\homePage.py:13: in __init__\n    self.sf_utils = SalesforceUtils(request)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^\nutility\\salesforce_data_utils.py:16: in __init__\n    self.sf = self.authenticate_salesforce()\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutility\\salesforce_data_utils.py:20: in authenticate_salesforce\n    sf_username = self.request.config.getoption(\"--sf_username\") or os.getenv(\"USERNAME\")\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <_pytest.config.Config object at 0x000001A1E94F30E0>, name = '--sf_username', default = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default: Any = notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option. You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Fallback value if no option of that name is **declared** via :hook:`pytest_addoption`.\n            Note this parameter will be ignored when the option is **declared** even if the option's value is ``None``.\n        :param skip: If ``True``, raise :func:`pytest.skip` if option is undeclared or has a ``None`` value.\n            Note that even if ``True``, if a default was specified it will be returned instead of a skip.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n            val = getattr(self.option, name)\n            if val is None and skip:\n                raise AttributeError(name)\n            return val\n        except AttributeError as e:\n            if default is not notset:\n                return default\n            if skip:\n                import pytest\n    \n                pytest.skip(f\"no {name!r} option found\")\n>           raise ValueError(f\"no option named {name!r}\") from e\nE           ValueError: no option named '--sf_username'\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\config\\__init__.py:1754: ValueError"}, "attachments": [{"name": "stdout", "source": "aa61bef6-b22e-4b38-b97d-8cbd3ba1c899-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_list_item", "value": "{'username': 'pgbitbucket706@agentforce.com', 'password': 'Pra245pte#'}"}], "start": 1750348481479, "stop": 1750348486730, "uuid": "e6850f0c-a9da-408b-baff-d603794acf28", "historyId": "4fa26c5d8a8f3f216283ca707f04bde8", "testCaseId": "edd327156eda62a83bae9df650959eeb", "fullName": "testcases.login_test.TestLogin#test_loginsalesforce_validcredentials", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "login_test"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-QPHGE425"}, {"name": "thread", "value": "26572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.login_test"}]}