{"name": "test_loginsalesforce_validcredentials[test_list_item0]", "status": "broken", "statusDetails": {"message": "simple_salesforce.exceptions.SalesforceAuthenticationFailed: invalid_grant: authentication failure", "trace": "self = <testcases.login_test.TestLogin object at 0x00000172E966DD10>, test_list_item = {'password': 'Pra245pte#', 'username': 'pgbitbucket706@agentforce.com'}\n\n    @pytest.mark.flaky(reruns=2)\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"test_list_item\", BaseTest.get_data_from_json(Login_test_data_path,\"valid_login\"))\n    def test_loginsalesforce_validcredentials(self, test_list_item):\n        loginpage = LoginPage(self.driver)\n        homepage = loginpage.logintosalesforce(test_list_item[\"username\"],test_list_item[\"password\"])\n        homepage.verify_page_title()\n>       homepage.verify_contact_details_by_lastname()\n\ntestcases\\login_test.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\homePage.py:21: in verify_contact_details_by_lastname\n    contact_details = sf_utils.get_contact_detail_by_lastname('Young',10)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutility\\salesforce_data_utils.py:44: in get_contact_detail_by_lastname\n    sf_auth = self.authenticate_salesforce()\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutility\\salesforce_data_utils.py:36: in authenticate_salesforce\n    self.sf = Salesforce(instance_url=self.sf_url, username=self.sf_username,\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\simple_salesforce\\api.py:215: in __init__\n    self._refresh_session()\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\simple_salesforce\\api.py:307: in _refresh_session\n    self.session_id, self.sf_instance = self._salesforce_login_partial()\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\simple_salesforce\\login.py:127: in SalesforceLogin\n    return token_login(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntoken_url = 'https://login.salesforce.com/services/oauth2/token'\ntoken_data = {'client_id': '3MVG9rZjd7MXFdLjZbuLuU2UtK9NYe4fuB27tdXI8TRtYz9Qdxm68_slvWM3WUkyt5frZrwR5Y3lZig82.HkA', 'client_secret'...41E000DDAC6BAA44FD590074138573737C169A902621431267C2FF1E32AB', 'grant_type': 'password', 'password': 'Pra245pte#', ...}\ndomain = 'login', consumer_key = '3MVG9rZjd7MXFdLjZbuLuU2UtK9NYe4fuB27tdXI8TRtYz9Qdxm68_slvWM3WUkyt5frZrwR5Y3lZig82.HkA', headers = None, proxies = {}\nsession = <requests.sessions.Session object at 0x00000172E96CD7F0>\n\n    def token_login(\n            token_url: str,\n            token_data: Dict[str, Any],\n            domain: str,\n            consumer_key: str,\n            headers: Optional[Headers],\n            proxies: Optional[Proxies],\n            session: Optional[requests.Session] = None) -> Tuple[Any, Any]:\n        \"\"\"Process OAuth 2.0 JWT Bearer Token Flow.\"\"\"\n        response = (session or requests).post(\n            token_url, token_data, headers=headers, proxies=proxies)\n    \n        try:\n            json_response = response.json()\n        except JSONDecodeError as exc:\n            raise SalesforceAuthenticationFailed(\n                response.status_code, response.text\n                ) from exc\n    \n        if response.status_code != 200:\n            except_code = json_response.get('error')\n            except_msg = json_response.get('error_description')\n            if except_msg == \"user hasn't approved this consumer\":\n                auth_url = f'https://{domain}.salesforce.com/services/oauth2/' \\\n                           'authorize?response_type=code&client_id=' \\\n                           f'{consumer_key}&redirect_uri=<approved URI>'\n                warnings.warn(f\"\"\"\n        If your connected app policy is set to \"All users may\n        self-authorize\", you may need to authorize this\n        application first. Browse to\n        {auth_url}\n        in order to Allow Access. Check first to ensure you have a valid\n        <approved URI>.\"\"\")\n>           raise SalesforceAuthenticationFailed(except_code, except_msg)\nE           simple_salesforce.exceptions.SalesforceAuthenticationFailed: invalid_grant: authentication failure\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\simple_salesforce\\login.py:310: SalesforceAuthenticationFailed"}, "parameters": [{"name": "test_list_item", "value": "{'username': 'pgbitbucket706@agentforce.com', 'password': 'Pra245pte#'}"}], "start": 1750311125879, "stop": 1750311146004, "uuid": "87cf0680-c71f-417e-9499-9f955a6aff29", "historyId": "4fa26c5d8a8f3f216283ca707f04bde8", "testCaseId": "edd327156eda62a83bae9df650959eeb", "fullName": "testcases.login_test.TestLogin#test_loginsalesforce_validcredentials", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "login_test"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-QPHGE425"}, {"name": "thread", "value": "12460-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.login_test"}]}